diff --git a/src/Chrom3D.cpp b/src/Chrom3D.cpp
index e9518cc..32315f7 100644
--- a/src/Chrom3D.cpp
+++ b/src/Chrom3D.cpp
@@ -11,6 +11,7 @@
 #include <math.h>
 #include <limits>
 #include <stdexcept>
+#include <string>
 
 #include <sstream>
 
@@ -18,9 +19,6 @@
 
 #include "../src/tclap-1.2.1/include/tclap/CmdLine.h"
 
-#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
-        ( std::ostringstream() << std::dec << x ) ).str()
-
 using namespace std;
 
 struct Args {
@@ -194,11 +192,11 @@ int main(int argc, char** argv) {
   //model.buildHashMap();
 
   MCMC mcmc(model);
-  bool success;
-  uint Niter=args.nIter;
   double maxTemp = args.maxtemp;
   double coolRate = args.coolrate; // Number between 0 and 1, giving the rate of cooling at each step
   double temp=maxTemp;
+  bool success;
+  (void)success; // [[maybe_unused]]
 
   uint verbosity = (args.verbose == 0) ? args.nIter+1 : args.verbose;
 
@@ -215,7 +213,7 @@ cerr << "0 " << model.getLossScore() << endl;
     assert(success);
     if (i % verbosity == 0) {
       if(args.printStructures) {
-	model.writeCMM(args.modelName + "_iter_" + SSTR(i) + ".cmm");
+	      model.writeCMM(args.modelName + "_iter_" + to_string(i) + ".cmm");
       }
       //cerr << i << " " << model.getLossScore(INTERACTION_INTRA) << " " << model.getLossScore(INTERACTION_INTER) << " " << model.getLossScore(PERIPHERY) << " " << model.getLossScore(CENTER) << " " << model.getLossScore(INTERACTION_DIST) << " " << model.getLossScore() << endl;
       cerr << i << " " << model.getLossScore() << endl;
diff --git a/src/Chromosome.h b/src/Chromosome.h
index 0fd61de..4f88baa 100644
--- a/src/Chromosome.h
+++ b/src/Chromosome.h
@@ -43,7 +43,6 @@ class Chromosome {
   friend bool operator!=(const Chromosome&, const Chromosome&);
   void setColor(double, double, double);
  private:
-  bool fixed;
   std::string name;
   //std::vector<Bead> beadList;
   boost::container::static_vector<Bead,MAXSIZE> beadList;
diff --git a/src/Model.cpp b/src/Model.cpp
index 9842585..5cc0e03 100644
--- a/src/Model.cpp
+++ b/src/Model.cpp
@@ -962,7 +962,6 @@ void Model::rescaleBeadSizes(double occupancyFactor) {
   assert(this->hasNucleus);
   vector<Chromosome>::iterator chriter;
   boost::container::static_vector<Bead,MAXSIZE>::iterator beaditer;
-  double beadVol = this->getTotalBeadVolume();
   double genomeLength = this->getTotalGenomeLength();
   for(chriter = chromosomes.begin(); chriter != chromosomes.end(); chriter++) {
     for(beaditer=chriter->begin(); beaditer!=chriter->end(); beaditer++) {
diff --git a/src/Randomizer.h b/src/Randomizer.h
index 4e738b5..358a089 100644
--- a/src/Randomizer.h
+++ b/src/Randomizer.h
@@ -24,6 +24,7 @@ class Move {
 class Randomizer {
  public:
   virtual Move randomize(Chromosome&, ENG&) = 0;
+  virtual ~Randomizer() noexcept = default;
 };
 
 
diff --git a/src/Util.h b/src/Util.h
index 0116f65..5875dd9 100644
--- a/src/Util.h
+++ b/src/Util.h
@@ -68,7 +68,7 @@ namespace util {
   class MoveException: public std::exception {
   public:
     MoveException();
-    const char* what(){return "Unacceptable move!";}
+    virtual const char* what() const noexcept {return "Unacceptable move!";}
   };
 
 }
